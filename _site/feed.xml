<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-05-24T22:48:07+02:00</updated><id>http://localhost:4000/</id><title type="html">ESIR Projet Farmbot</title><subtitle>Le projet des Etudiants en 4eme année option IoT</subtitle><entry><title type="html">Station météo</title><link href="http://localhost:4000/jekyll/cat2/2018/04/27/Station.html" rel="alternate" type="text/html" title="Station météo" /><published>2018-04-27T00:00:00+02:00</published><updated>2018-04-27T00:00:00+02:00</updated><id>http://localhost:4000/jekyll/cat2/2018/04/27/Station</id><content type="html" xml:base="http://localhost:4000/jekyll/cat2/2018/04/27/Station.html">&lt;p&gt;Notre deuxième objectif est de monter la station météo. Pour cela nous avons les outils suivants :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt; Arduino Mega&lt;/li&gt;
  &lt;li&gt; Baromètre Adafruit&lt;/li&gt;
  &lt;li&gt; Sonde d'humidité&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nous avons testé le baromètre Adafruit. Pour cela nous avons le code suivant :
&lt;img src=&quot;/assets/Code_Humidite.PNG&quot; style=&quot;width: 500px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nous avons le résultat suivant:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Humidite.PNG&quot; style=&quot; width: 300px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ici le capteur mesure l’humidité par le protocole i2c.&lt;/p&gt;</content><author><name>Yoann</name></author><summary type="html">Notre deuxième objectif est de monter la station météo. Pour cela nous avons les outils suivants : Arduino Mega Baromètre Adafruit Sonde d'humidité</summary></entry><entry><title type="html">Outils utilisés</title><link href="http://localhost:4000/jekyll/cat2/2018/04/23/langages.html" rel="alternate" type="text/html" title="Outils utilisés" /><published>2018-04-23T00:00:00+02:00</published><updated>2018-04-23T00:00:00+02:00</updated><id>http://localhost:4000/jekyll/cat2/2018/04/23/langages</id><content type="html" xml:base="http://localhost:4000/jekyll/cat2/2018/04/23/langages.html">&lt;h1 font=&quot;&quot; color=&quot;blue&quot;&gt; Langages &lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;h2&gt;&lt;font color=&quot;red&quot;&gt; Elixir&lt;/font&gt; &lt;/h2&gt;&lt;/li&gt;
    Un langage de programmation dynamique basé sur la machine Erlang très utilisé
    pour la programmation machine to machine. le &lt;a href=&quot;https://elixir-lang.org/&quot;&gt; lien ici &lt;/a&gt; pour consulter le site officiel. Dans notre farmbot, Elixir est utilisé pour communiquer entre l'arduino et la raspberry.Ce sont des commandes impératives dynamiques qui sont fault-tolerent c'est à dire qu'un bug sur une partie du programme n'entraîne pas l'arrêt de tout le système.
  &lt;li&gt;&lt;h2&gt;&lt;font color=&quot;red&quot;&gt;Typescript&lt;/font&gt; &lt;/h2&gt;&lt;/li&gt;
    Un langage de programmation orienté objet. Très utilisé pour le développement de serveurs et d'applications web. Le &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;lien ici &lt;/a&gt;. Dans notre farmbot il constitue l'aspect application web. C'est dans ce langage qu'est principalement développée l'application web.
  &lt;li&gt;&lt;h2&gt;&lt;font color=&quot;red&quot;&gt;React&lt;/font&gt; &lt;/h2&gt;&lt;/li&gt;
    une bibliothèque en Javascript permettant d'implémenter des interfaces web. C'est lui qui permet de créer l'interface Homme machine (IHM). Le &lt;a href=&quot;https://reactjs.org/&quot;&gt;lien ici&lt;/a&gt;
    &lt;li&gt;&lt;h2&gt;&lt;font color=&quot;red&quot;&gt;C++&lt;/font&gt; &lt;/h2&gt;&lt;/li&gt;
      Ce langage permet à l'arduino de faire des actions. Les actions sont retranscrites en G-CODES avant d'être exécutées.
&lt;/ul&gt;

&lt;h1 font=&quot;&quot; color=&quot;red&quot;&gt; Station météo &lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;img src=&quot;/assets/Sonde.png&quot; style=&quot;width: 300px;&quot; /&gt; la sonde d'humidité pour mesurer l'humidité de la terre &lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;/assets/anemometre.png&quot; style=&quot;width: 300px;&quot; /&gt;L'anémomètre pour mesurer la force du vent &lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;/assets/barometre.png&quot; style=&quot;width: 300px;&quot; /&gt; Le baromètre pour mesurer la pression de l'air et la température. &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Yoann</name></author><summary type="html">Langages Elixir Un langage de programmation dynamique basé sur la machine Erlang très utilisé pour la programmation machine to machine. le lien ici pour consulter le site officiel. Dans notre farmbot, Elixir est utilisé pour communiquer entre l'arduino et la raspberry.Ce sont des commandes impératives dynamiques qui sont fault-tolerent c'est à dire qu'un bug sur une partie du programme n'entraîne pas l'arrêt de tout le système. Typescript Un langage de programmation orienté objet. Très utilisé pour le développement de serveurs et d'applications web. Le lien ici . Dans notre farmbot il constitue l'aspect application web. C'est dans ce langage qu'est principalement développée l'application web. React une bibliothèque en Javascript permettant d'implémenter des interfaces web. C'est lui qui permet de créer l'interface Homme machine (IHM). Le lien ici C++ Ce langage permet à l'arduino de faire des actions. Les actions sont retranscrites en G-CODES avant d'être exécutées.</summary></entry><entry><title type="html">Installation de l’application web</title><link href="http://localhost:4000/jekyll/cat2/2018/04/23/Installation.html" rel="alternate" type="text/html" title="Installation de l'application web" /><published>2018-04-23T00:00:00+02:00</published><updated>2018-04-23T00:00:00+02:00</updated><id>http://localhost:4000/jekyll/cat2/2018/04/23/Installation</id><content type="html" xml:base="http://localhost:4000/jekyll/cat2/2018/04/23/Installation.html">&lt;p&gt; L'application web est l'interface sur laquelle va intervenir l'utilisateur pour entrer en communication avec le farmbot.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/Webapp.png&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2&gt; Pour installer l'application &lt;/h2&gt;

&lt;p&gt;Il faut suivre les étapes mentionnées sur ce &lt;a href=&quot;https://github.com/FarmBot/Farmbot-Web-App#q-how-do-i-setup-an-instance-locally&quot;&gt; lien &lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;La clé de la réussite de l’installation se trouve dans la configuration du fichier “Application.yml”.&lt;/p&gt;</content><author><name>Yoann</name></author><summary type="html">L'application web est l'interface sur laquelle va intervenir l'utilisateur pour entrer en communication avec le farmbot.</summary></entry><entry><title type="html">Introduction</title><link href="http://localhost:4000/jekyll/cat2/2017/12/15/Intro.html" rel="alternate" type="text/html" title="Introduction" /><published>2017-12-15T00:00:00+01:00</published><updated>2017-12-15T00:00:00+01:00</updated><id>http://localhost:4000/jekyll/cat2/2017/12/15/Intro</id><content type="html" xml:base="http://localhost:4000/jekyll/cat2/2017/12/15/Intro.html">&lt;h1&gt; &lt;font color=&quot;red&quot;&gt; Introduction &lt;/font&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Farmbot.jpg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2&gt; Le Farmbot &lt;/h2&gt;
&lt;p&gt;
	Le farmbot  a été lancé en Septembre 2013 aux Etats-Unis par une équipe de Californiens. Ils ont été aidés par toute une communauté d'ingénieurs, de développeurs et de scientifiques qui ont fait de nombreux dons pour que ce projet open-source soit lancé. Le but de ce projet est de fournir un outil permettant à tous de produire sa propre nourriture de façon saine et intelligente.
&lt;/p&gt;

&lt;h2&gt; Le contenu &lt;/h2&gt;

&lt;p&gt; Le Farmbot est livré avec toutes les pièces permettant son fonctionnement. Il comprend, tout d’abord, toutes les pièces en métal (le plus souvent en aluminium) en plastique qui constituent la structure du robot. Il y a aussi la partie électronique contenant tous les câblages, les moteurs, l’arduino, le Raspberry pi3 ainsi que les différents supports. Le matériel pour alimenter le robot en eau est aussi livré. De plus, lors de l’achat, nous avons accès à l’application open-source Farmbot.
&lt;/p&gt;

&lt;h2&gt; Les différentes têtes &lt;/h2&gt;

&lt;p&gt;Le bras du Farmbot est composé en son extrémité d’une partie fixe où vient se fixer les différentes têtes permettant au bras de réaliser plusieurs actions.  Le bras en fonction des tâches à réaliser choisis la tête. La première tête est utilisé pour le plantage des graines. Il prend le nombre juste de graine grâce à la taille de l’embout et un système à air pour le mouvement. La deuxième tête permet l’arrosage des plantes.  La troisième, elle est équipé d’un capteur d’humidité permettant l’analyse du sol au pied de la plante. La dernière tête est utilisé pour l’enfouissement des mauvaises herbes. La détection des mauvaises herbes est effectué à l’aide d’une caméra positionnée sur le bras.
&lt;/p&gt;

&lt;h2&gt; Le Logiciel et l'application &lt;/h2&gt;

&lt;p&gt; Le Farmbot est livré avec une application mobile et une interface web. Pour fonctionner le robot doit être connecté à internet.  Cette partie logicielle a été conçu de façon très intuitive pour que chacun puisse l'utiliser. Le principe de base est de choisir le type de plante que l’on souhaite dans son potager. Une fois sélectionnée, il suffit de glisser la plante sur le plan du potager à l’endroit où on souhaite la planter. Une base de donnée comprenant les caractéristiques de chacunes des plantes (eau, lumière …) est également présente.  L’application permet également de diriger le bras robot individuellement de ce qui à été programmé.
&lt;p&gt;
 
&lt;/p&gt;&lt;/p&gt;</content><author><name>Yoann</name></author><summary type="html">Introduction</summary></entry><entry><title type="html">Fonctionnement du Farmbot</title><link href="http://localhost:4000/jekyll/cat2/2017/12/04/fonctionnement.html" rel="alternate" type="text/html" title="Fonctionnement du Farmbot" /><published>2017-12-04T00:00:00+01:00</published><updated>2017-12-04T00:00:00+01:00</updated><id>http://localhost:4000/jekyll/cat2/2017/12/04/fonctionnement</id><content type="html" xml:base="http://localhost:4000/jekyll/cat2/2017/12/04/fonctionnement.html">&lt;h1 align=&quot;center&quot;&gt; Fonctionnement du Farmbot &lt;/h1&gt;

&lt;p&gt; &lt;font color=&quot;#996633&quot;&gt;
Le Farmbot est construit en quatre principaux blocs qui sont chacuns reliés entre eux.
Tout d’abord la &lt;strong&gt;“Farmbot Web application”&lt;/strong&gt; [1], qui est l’interface permettant à l’utilisateur d'interagir de différentes façons avec le robot. Ensuite, il y a la &lt;strong&gt;partie Raspberry&lt;/strong&gt; [2], directement connecté à la web-App. Elle permet de synchroniser chaque demande, chaque nouvelle séquence et de remonter les informations jusqu’à l’utilisateur. Ce bloc est relié à &lt;strong&gt;l’arduino&lt;/strong&gt; [3], ce micro-contrôleur permet de contrôler la partie matérielle et de retourner les opérations. &lt;/font&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FonctionnementFarmbot.png&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt; &lt;font color=&quot;#996633&quot;&gt;
La structure du Farmbot est composé de 4 grandes parties, la dernière est la partie Farmbot. Ce terme défini en faite le robot en lui même, toutes la partie Hardware connecté à l’arduino.
Nous allons étudier séparément le fonctionnement de chaque blocs.&lt;/font&gt;
&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt; La Web-app &lt;/h1&gt;

&lt;p&gt; &lt;font color=&quot;#996633&quot;&gt;
Ce que les créateurs du Farmbot appelle la “Web-App” est en réalité l’outil qui sert d’interface entre l’utilisateur et le Farmbot. Cette interface est accessible pour tous les utilisateurs sur le web, sur leurs smartphones et également sur tablette .  La Web-App est de base hébergé sur my.farmbot.io. Cependant, il est possible de l’héberger localement. &lt;/font&gt;
&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/WebApp.png&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt; &lt;font color=&quot;#996633&quot;&gt;
Cet outil permet de réaliser des tâches tels que le placement des différentes plantes grâce à un système de glisser-déposer. L’utilisateur a un plan de son jardin et une liste des plantes et légumes à sa disposition. Il lui suffit de glisser la plante qu’il souhaite planter à l’emplacement souhaité. Une fois l’application synchronisé avec le Farmbot, celui-ci va automatiquement planter la graine choisie au bon endroit.
La réalisation d’événement possède des fréquences définies par l’utilisateur. Par exemple, l'utilisateur créé un évènement d’irrigation de son jardin et décide de le mettre en place toutes les semaines le même jour et à la même heur
&lt;/font&gt;&lt;/p&gt;
&lt;p&gt; &lt;font color=&quot;#996633&quot;&gt;
L’application web permet d’afficher les informations sur le système et l’état de la connexion entre les différentes parties du Farmbot. Par ailleurs, elle sert à initialiser le robot Farmbot.
On peut définir où sont placées les différentes têtes pour qu’ensuite le bras du Farmbot puisse les utiliser. Une dernière possibilité pour l’utilisateur et de configurer la caméra ainsi que définir la sensibilité à la détection des mauvaises herbes.
&lt;/font&gt;&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt; La Raspberry Pi &lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/RPI.jpeg&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;#996633&quot;&gt;
&lt;strong&gt;La Raspberry Pi est un élément essentiel au fonctionnement du Farmbot&lt;/strong&gt;. En effet, il fait le lien entre la Web-App et la partie Arduino. C’est lui le cerveau du robot. La connexion entre l’application web et la Raspberry Pi se fait en Ethernet ou en Wifi. Dans les deux cas une passerelle MQTT est utilisée. Le serveur MQTT est appelé “broker”. C’est lui qui va collecter les informations. Les clients MQTT, sont abonnés à des topics. Le serveur peut alors envoyer des informations à tous les clients connectés à un même topic.

Cette connexion permet de transférer les commandes désirées par l’utilisateur lorsqu’il réalise par exemple une séquence de plantation ainsi que de faire remonter des informations sur l’état des capteurs.


La Raspberry Pi est connectée au contrôleur Arduino en USB pour lui transmettre les différentes commandes et recevoir des données tels que celles fournies par le capteur de sol.
&lt;/font&gt;&lt;/p&gt;

&lt;h1 align=&quot;center&quot;&gt; L'arduino &lt;/h1&gt;

&lt;p&gt;&lt;font color=&quot;#996633&quot;&gt;
Le contrôleur Arduino ATmega réalise le lien avec la partie mécanique du Farmbot. En fonction des commandes reçues par la Raspberry Pi, il commande les différentes parties du Farmbot. Les moteurs sont dirigés grâce à la carte RAMPS qui est branchée sur l’arduino. Cette carte permet d'interfacer plusieurs fonctionnalités comme la commande de plusieurs moteurs. Le contrôle se fait par envoi d’impulsions électriques, l’Arduino interagit alors avec les moteurs pour déplacer le bras et réaliser l’ensemble des commandes . Pour ce qui est du contrôle et du choix des têtes, cela est réalisé grâce à l’écriture sur les broches (PINs) correspondantes. L’Arduino récolte également les données de ses capteurs pour les transmettre à la Raspberry qui, ensuite, fait remonter les informations à la Web-App via la passerelle MQTT.
&lt;/font&gt;&lt;/p&gt;</content><author><name>Team Farmbot</name></author><summary type="html">Fonctionnement du Farmbot</summary></entry><entry><title type="html">Introduction au cahier des charges</title><link href="http://localhost:4000/jekyll/cat2/2017/11/24/cahier.html" rel="alternate" type="text/html" title="Introduction au cahier des charges" /><published>2017-11-24T00:00:00+01:00</published><updated>2017-11-24T00:00:00+01:00</updated><id>http://localhost:4000/jekyll/cat2/2017/11/24/cahier</id><content type="html" xml:base="http://localhost:4000/jekyll/cat2/2017/11/24/cahier.html">&lt;p&gt;&lt;img src=&quot;/assets/Famrbot.png&quot; alt=&quot;Image&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pour ce projet, nous avons décidé de réaliser un cahier des charges avec plusieurs niveaux à atteindre en fonction de l’avancement dans le temps. 
   Dans un premier temps, nous souhaitons rendre totalement autonome le Farmbot. Pour cela plusieurs alternatives s’offrent à nous notamment au niveau de l’apport en électricité. Nous étudions la possibilité d’utiliser principalement l’énergie solaire.&lt;/p&gt;

&lt;body style=&quot;background-color:#996633;&quot;&gt;


&lt;ul&gt;
&lt;li&gt;&lt;font color=&quot;FFFFFF&quot;&gt;
&lt;strong&gt;Niveau 1 : &lt;/strong&gt;
Mise en place de l’énergie solaire
Modification du logiciel avec ajouts de conseils et envoi de suggestions en fonction de la saison. &lt;/font&gt;
&lt;/li&gt; 

&lt;li&gt;&lt;font color=&quot;FFFFFF&quot;&gt;
&lt;strong&gt; Niveau 2 : &lt;/strong&gt;
Station météo pour l’optimisation de la gestion de l’eau
&lt;/font&gt;&lt;/li&gt;

&lt;li&gt;&lt;font color=&quot;FFFFFF&quot;&gt;
&lt;strong&gt; Niveau 3 : &lt;/strong&gt;

Gestion efficace des eaux pluviales.
Outil permettant de retourner la terre
&lt;/font&gt;&lt;/li&gt; 
&lt;/ul&gt;
&lt;p&gt;&lt;font color=&quot;FFFFFF&quot;&gt;
Ce cahier des charges est évolutif en fonction des idées qui pourraient survenir durant le projet.
&lt;/font&gt;&lt;/p&gt;

&lt;/body&gt;</content><author><name>Yoann</name></author><summary type="html"></summary></entry><entry><title type="html">Présentation de l’équipe</title><link href="http://localhost:4000/jekyll/cat2/2017/11/21/equipe.html" rel="alternate" type="text/html" title="Présentation de l'équipe" /><published>2017-11-21T00:00:00+01:00</published><updated>2017-11-21T00:00:00+01:00</updated><id>http://localhost:4000/jekyll/cat2/2017/11/21/equipe</id><content type="html" xml:base="http://localhost:4000/jekyll/cat2/2017/11/21/equipe.html">&lt;p&gt;L’équipe est constituée de 3 membres de deuxième année à l’ESIR&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Yoann.jpg&quot; style=&quot;width: 200px;&quot; /&gt;
&lt;strong&gt;Yoann d’Erneville &lt;/strong&gt; ESIR 2 TICP assure la partie électronique&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Theo.jpg&quot; style=&quot;width: 200px;&quot; /&gt;
&lt;strong&gt;Théo Robin &lt;/strong&gt; ESIR 2 TICB Assure la partie Informatique&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Thomas.jpg&quot; style=&quot;width: 200px;&quot; /&gt;
&lt;strong&gt;Thomas Legris&lt;/strong&gt; ESIR 2 TICB assure la partie Réseaux et Communication&lt;/p&gt;

&lt;p&gt;Les rôles sont distribuées à chacun mais on essaye tous d’assurer un peu partout en fonction des disponibilités de chacun.&lt;/p&gt;</content><author><name>Yoann</name></author><summary type="html">L’équipe est constituée de 3 membres de deuxième année à l’ESIR</summary></entry></feed>